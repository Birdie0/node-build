#!/usr/bin/env bash

# scrapes, commits, pushes, and pull-requests new node definitions
#
# Usage: script/update-nodes [-o ORIGIN] [-r REMOTE]
#
# Options:
#   -o ORIGIN    The remote to which the pull-request will be opened.
#                [default: origin]
#   -r REMOTE    The remote to which scraped definitions will be pushed.
#                [default: origin]
#
#
# * inspired by: https://github.com/jasonkarns/brew-publish *

set -eufo pipefail
IFS=$'\n\t'

abort() {
  echo "$1" >&2
  exit 1
}

if ! type -p hub >/dev/null; then
  abort "ERROR: You have to install hub to proceed."
fi

while getopts ":o:r:" opt; do
  case $opt in
  o) origin="${OPTARG:-origin}" ;;
  r) remote="${OPTARG:-origin}" ;;
  :) abort "Option -$OPTARG requires an argument." ;;
  \?) abort "Invalid option: -$OPTARG" ;;
  esac
done

: "${origin:=origin}"
# hackish way of getting the git remote name for user's fork
: "${remote:=$(hub fork 2>&1 | grep -oE 'remote:? \S+' | tail -1 | awk '{print $2}')}"

git fetch --quiet --unshallow "$origin" master 2>/dev/null || git fetch --quiet "$origin" master

git checkout --quiet "$origin"/master

npm run-script scrape-definitions

for node_def in $(git ls-files --others --exclude-standard -- share/node-build/); do
  node_name="$(basename "$node_def")"

  git checkout --quiet -B "node/$node_name" "$origin"/master
  git add -- "$node_def"
  git commit --message "$node_name" --message "Created with \`npm run submit-definitions\`." --only -- "$node_def"
  git push --set-upstream "$remote" HEAD
  hub pull-request --message="$(git log -1 --format='%B')"
  git checkout --quiet -
done

git checkout --quiet master
